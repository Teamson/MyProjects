{
  "code": "import GameLogic from \"../GameLogic\";\r\nimport WxApi from \"../../Libs/WxApi\";\r\nexport default class Slice extends Laya.Script {\r\n    constructor() {\r\n        super();\r\n        this.myOwner = null;\r\n        this.value = '';\r\n        this.type = 1;\r\n        this.plane = null;\r\n        this.cxt = null;\r\n        this.cav = null;\r\n        this.calType = 0;\r\n        this.num = 1;\r\n        this.hadColl = false;\r\n        this.hadClear = false;\r\n        this.texture2d = null;\r\n    }\r\n    onAwake() {\r\n        this.myOwner = this.owner;\r\n        this.plane = this.myOwner.getChildByName('Plane');\r\n    }\r\n    onDisable() {\r\n    }\r\n    init(type) {\r\n        this.type = type;\r\n        if (this.value[0] == '+') {\r\n            this.calType = 0;\r\n            let strArr = this.value.split('+');\r\n            this.num = parseInt(strArr[1]);\r\n        }\r\n        else if (this.value[0] == '-') {\r\n            this.calType = 1;\r\n            let strArr = this.value.split('-');\r\n            this.num = parseInt(strArr[1]);\r\n        }\r\n        else if (this.value[0] == '*') {\r\n            this.calType = 2;\r\n            let strArr = this.value.split('*');\r\n            this.num = parseInt(strArr[1]);\r\n        }\r\n        else if (this.value[0] == '/') {\r\n            this.calType = 3;\r\n            let strArr = this.value.split('/');\r\n            this.num = parseInt(strArr[1]);\r\n        }\r\n        if (this.value[0] == '*') {\r\n            let str = this.value.split('*');\r\n            this.value = 'x' + str[1];\r\n        }\r\n        else if (this.value.search('/') != -1) {\r\n            let str = this.value.split('/');\r\n            this.value = 'รท' + str[1];\r\n        }\r\n        let mat = this.plane.meshRenderer.material;\r\n        this.cav = Laya.Browser.createElement(\"canvas\");\r\n        this.cxt = this.cav.getContext(\"2d\");\r\n        this.cav.width = 256;\r\n        this.cav.height = 256;\r\n        this.cxt.fillStyle = 'rgb(255,255,255)';\r\n        this.cxt.font = \"bold 150px Arial\";\r\n        this.cxt.textAlign = \"center\";\r\n        this.cxt.textBaseline = \"center\";\r\n        this.cxt.fillText(this.value, 130, 180, 200);\r\n        this.cxt.strokeStyle = \"black\";\r\n        this.cxt.font = \"bold 150px Arial\";\r\n        this.cxt.strokeText(this.value, 130, 180, 200);\r\n        this.texture2d = new Laya.Texture2D(256, 256);\r\n        this.texture2d.loadImageSource(this.cav);\r\n        mat.albedoTexture = this.texture2d;\r\n    }\r\n    checkColl() {\r\n        if (this.hadColl || GameLogic.Share.isGameOver)\r\n            return;\r\n        let myPos = this.myOwner.transform.position.clone();\r\n        let mPos = GameLogic.Share._mosquitoNode.transform.position.clone();\r\n        if (Math.abs(myPos.z - mPos.z) < 0.1 && mPos.x > myPos.x - 2 && mPos.x < myPos.x + 2) {\r\n            WxApi.DoVibrate();\r\n            this.hadColl = true;\r\n            let totalCount = GameLogic.Share._mosquitoNode.numChildren;\r\n            if (this.calType == 0) {\r\n                totalCount += this.num;\r\n            }\r\n            else if (this.calType == 1) {\r\n                totalCount -= this.num;\r\n            }\r\n            else if (this.calType == 2) {\r\n                totalCount *= this.num;\r\n            }\r\n            else if (this.calType == 3) {\r\n                totalCount /= this.num;\r\n            }\r\n            GameLogic.Share.updateMosquitoNum(Math.floor(totalCount));\r\n        }\r\n    }\r\n    onUpdate() {\r\n        this.checkColl();\r\n        if (GameLogic.Share.isGameOver && !this.hadClear) {\r\n            this.hadClear = true;\r\n            this.cxt.clearRect(0, 0, 256, 256);\r\n        }\r\n    }\r\n    onDestroy() {\r\n        this.texture2d.destroy();\r\n    }\r\n}\r\n",
  "references": [
    "E:/FDProjects/Projects/Mosquito-wzdzz/src/Crl/GameLogic.ts",
    "E:/FDProjects/Projects/Mosquito-wzdzz/src/Libs/WxApi.ts"
  ]
}
