{
  "code": "export default class WxApi {\r\n    static LoginWx(cb) {\r\n        if (!Laya.Browser.onWeiXin)\r\n            return;\r\n        let launchData = Laya.Browser.window.wx.getLaunchOptionsSync();\r\n        Laya.Browser.window.wx.login({\r\n            success(res) {\r\n                if (res.code) {\r\n                    console.log('res.code:', res.code);\r\n                    if (cb) {\r\n                        cb(res.code, launchData.query);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    static checkScope(btnNode) {\r\n        if (Laya.Browser.onWeiXin) {\r\n            Laya.Browser.window.wx.getSetting({\r\n                success: (response) => {\r\n                    if (!response.authSetting['scope.userInfo']) {\r\n                        console.log('没有授权');\r\n                        this.createScope(btnNode);\r\n                    }\r\n                    else {\r\n                        console.log('已经授权');\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    static createScope(btnNode) {\r\n        this.scopeBtn = Laya.Browser.window.wx.createUserInfoButton({\r\n            type: 'text',\r\n            text: '',\r\n            style: {\r\n                left: btnNode.x,\r\n                top: btnNode.y,\r\n                width: btnNode.width,\r\n                height: btnNode.height,\r\n                lineHeight: 40,\r\n                backgroundColor: '#ffffff',\r\n                color: '#ffffff',\r\n                textAlign: 'center',\r\n                fontSize: 16,\r\n                borderRadius: 0\r\n            }\r\n        });\r\n        this.scopeBtn.onTap((res) => {\r\n            if (res.errMsg == \"getUserInfo:ok\") {\r\n                this.scopeBtn.destroy();\r\n                this.scopeBtn = null;\r\n            }\r\n            else if (res.errMsg == 'getUserInfo:fail auth deny') {\r\n                this.scopeBtn.destroy();\r\n                this.scopeBtn = null;\r\n            }\r\n        });\r\n    }\r\n    static GetLaunchParam(fun) {\r\n        if (Laya.Browser.onWeiXin) {\r\n            this.OnShowFun = fun;\r\n            fun(this.GetLaunchPassVar());\r\n            Laya.Browser.window.wx.onShow((para) => {\r\n                if (this.OnShowFun != null) {\r\n                    this.OnShowFun(para);\r\n                }\r\n                console.log(\"wx on show\");\r\n            });\r\n        }\r\n    }\r\n    static GetLaunchPassVar() {\r\n        if (Laya.Browser.onWeiXin) {\r\n            return Laya.Browser.window.wx.getLaunchOptionsSync();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    static WxOnHide(fun) {\r\n        if (Laya.Browser.onWeiXin) {\r\n            Laya.Browser.window.wx.onHide(fun);\r\n        }\r\n    }\r\n    static WxOffHide(fun) {\r\n        if (fun && Laya.Browser.onWeiXin) {\r\n            Laya.Browser.window.wx.offHide(fun);\r\n        }\r\n    }\r\n    static WxOnShow(fun) {\r\n        if (Laya.Browser.onWeiXin) {\r\n            Laya.Browser.window.wx.onShow(fun);\r\n        }\r\n    }\r\n    static WxOffShow(fun) {\r\n        if (fun && Laya.Browser.onWeiXin) {\r\n            Laya.Browser.window.wx.offShow(fun);\r\n        }\r\n    }\r\n    static httpRequest(url, params, type = 'get', completeHandler) {\r\n        var xhr = new Laya.HttpRequest();\r\n        xhr.http.timeout = 5000;\r\n        xhr.once(Laya.Event.COMPLETE, this, completeHandler);\r\n        xhr.once(Laya.Event.ERROR, this, this.httpRequest, [url, params, type, completeHandler]);\r\n        if (type == \"get\") {\r\n            xhr.send(url + '?' + params, \"\", type, \"text\");\r\n        }\r\n        else if (type == \"post\") {\r\n            xhr.send(url, JSON.stringify(params), type, \"text\");\r\n        }\r\n    }\r\n    static DoVibrate(isShort = true) {\r\n        if (Laya.Browser.onWeiXin && this.isVibrate) {\r\n            if (isShort) {\r\n                Laya.Browser.window.wx.vibrateShort();\r\n            }\r\n            else {\r\n                Laya.Browser.window.wx.vibrateLong();\r\n            }\r\n        }\r\n    }\r\n    static OpenAlert(msg, dur = 2000, icon = false) {\r\n        if (Laya.Browser.onWeiXin) {\r\n            Laya.Browser.window.wx.showToast({\r\n                title: msg,\r\n                duration: dur,\r\n                mask: false,\r\n                icon: icon ? 'success' : 'none',\r\n            });\r\n        }\r\n    }\r\n    static NavigateApp(appid, path, title, cancelCB, successCB) {\r\n        if (Laya.Browser.onWeiXin) {\r\n            let self = this;\r\n            Laya.Browser.window.wx.navigateToMiniProgram({\r\n                appId: appid,\r\n                path: path,\r\n                success(res) {\r\n                    console.log('打开成功');\r\n                    successCB();\r\n                },\r\n                fail(res) {\r\n                    console.log('打开失败');\r\n                    cancelCB();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    static preViewImage(url) {\r\n        if (Laya.Browser.onWeiXin) {\r\n            Laya.Browser.window.wx.previewImage({\r\n                current: url,\r\n                urls: [url]\r\n            });\r\n        }\r\n    }\r\n}\r\nWxApi.UnityPath = 'LayaScene_SampleScene/Conventional/';\r\nWxApi.openId = '';\r\nWxApi.version = '1.0.0';\r\nWxApi.isVibrate = true;\r\nWxApi.isMusic = true;\r\nWxApi.OnShowFun = null;\r\nWxApi.scopeBtn = null;\r\nWxApi.shareCallback = null;\r\nWxApi.front_share_number = 0;\r\nWxApi.sceneId = 0;\r\nWxApi.gotOfflineBounes = false;\r\nWxApi.configData = null;\r\nWxApi.shareTime = 0;\r\nWxApi.firstShare = true;\r\nWxApi.hadShowFriendUI = false;\r\nWxApi.launchGameUI = false;\r\nWxApi.firstStartGame = false;\r\nWxApi.isKillBossUI = false;\r\nWxApi.fromKillBossUI = false;\r\nWxApi.killbossCallback = null;\r\nWxApi.gameNavCallback = null;\r\nWxApi.gameNavOnHide = false;\r\nWxApi.isStartUI = false;\r\nWxApi.isAuditor = false;\r\nWxApi.shieldAppid = false;\r\nWxApi.tempGrade = 1;\r\n",
  "references": []
}
